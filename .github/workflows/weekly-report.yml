name: Weekly Report Generation

on:
  schedule:
    - cron: '0 1 * * MON'  # Runs every Monday at 1 AM UTC
  workflow_dispatch:        # Allows manual trigger

jobs:
  generate-report:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mysql-connector-python pandas openpyxl paramiko sshtunnel
        
    - name: Setup SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
        chmod 600 ~/.ssh/known_hosts
        
        # Verify SSH setup
        echo "Testing SSH connection..."
        ssh -o ConnectTimeout=10 -v ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "echo 'SSH connection successful'"
        
    - name: Copy Template and Query Files
      run: |
        mkdir -p Reports/WeeklyReport
        cp WoW_report_template.xlsx Reports/WeeklyReport/
        cp "Reports/WeeklyReport/Queries for Weekly Report.txt" Reports/WeeklyReport/
        
    - name: Run Weekly Report Script
      env:
        MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
        MYSQL_USER: ${{ secrets.MYSQL_USER }}
        MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      run: |
        cd Reports/WeeklyReport
        python weeklyreport.py
        
    - name: Upload Report
      uses: actions/upload-artifact@v3
      with:
        name: weekly-report
        path: Reports/WeeklyReport/output/WoW_report_*.xlsx
        retention-days: 30 